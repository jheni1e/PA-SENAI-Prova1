1 - Em que situações você usaria o arquivo .gitignore? Cite exemplos práticos e
explique a utilidade deste arquivo.
R: Ao criar um projeto pessoal em um repositório, existem arquivos que eu gostaria de manter privados, ou seja, não subir ao repositório do GitHub como arquivos
de ambiente/environment, as pastas obj e bin, e demais arquivos que contenham dados sensíveis.

2 - O que é um pull request no GitHub? Qual a importância dele para projetos
colaborativos?
R: É um pedido para que seu código seja integrado no repositório do GitHub que então é avaliado e, se aprovado, é commitado. Isso serve para ter um controle de
todo o código que entra em um projeto colaborativo, entender qual a finalidade dele e as mudanças realizadas, para ser testado e revisado por um terceiro, etc.,
evitando de subir código com falhas e não revisado.

3 - Qual a diferença entre git commit e git push?
R: O git commit "instancia" o commit, traz todos os arquivos que você adicionou com git add, juntamente de uma mensagem (obrigatoriamente),
e o git push realmente manda o commit para o repositório, como o nome quase autoexplica ("push to the repo").

4 – O que são conventional commits e conventional branches? Para qual finalidade
eles seriam utilizados e resolveriam qual tipo de problema?
R: 

5 - Você clonou um repositório remoto, irá criar uma branch chamada
feature/login para fazer alguns commits. Escreva os comandos e passo a passo
necessários para:
a) Enviar essa branch para o repositório remoto.
b) Criar um pull request no GitHub.

a)
R: git branch feature/login, git checkout feature/login, git add ., git commit -m "branch criada", git push

b)
R: